{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "allowedValues": [
        "eastus",
        "westus2",
        "southcentralus"
      ],
      "metadata": {
        "description": "The location into which the Azure Storage resources should be deployed. When using Private Link origins with Front Door Premium during the preview period, there is a limited set of regions available for use. See https://docs.microsoft.com/en-us/azure/frontdoor/standard-premium/concept-private-link#limitations for more details."
      }
    },
    "accountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Storage account to create. This must be globally unique."
      }
    },
    "skuName": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The name of the SKU to use when creating the Azure Storage account."
      }
    },
    "blobContainerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Storage blob container to create."
      }
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[format('{0}/{1}/{2}', parameters('accountName'), 'default', parameters('blobContainerName'))]",
      "properties": {
        "publicAccess": "Blob"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))]"
      ]
    }
  ],
  "outputs": {
    "blobEndpointHostName": {
      "type": "string",
      "value": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))).primaryEndpoints.blob, 'https://', ''), '/', '')]"
    },
    "storageResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))]"
    }
  }
}