{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    },
     "actionGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the action group."
      }
    },
    "actionGroupShortName": {
      "type": "string",
      "metadata": {
        "description": "The short name of the action group."
      }
    },
    "appInsightsResource": {
      "type": "string",
      "metadata": {
        "description": "The id of the underlying Application Insights resource."
      }
    },
    "appName": {
      "type": "string",
      "metadata": {
        "description": "Name of azure web app."
      }
    },
    "appServiceTier": {
      "type": "string",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "Choose either Standard or Premium Azure Web Apps pricing tiers. It defaults to Standard."
      }
    },
    "appServiceWorkerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0",
      "metadata": {
        "description": "Worker Size( 0=Small, 1=Medium, 2=Large )"
      }
    },
    "dbServerName": {
      "type": "string",
      "metadata": {
        "description": "SQL Azure DB Server name"
      }
    },
    "dbAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "SQL Azure DB administrator  user login"
      }
    },
    "dbAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Database admin user password"
      }
    },
    "dbName": {
      "type": "string",
      "metadata": {
        "description": "Database Name"
      }
    },
    "dbEdition": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "SQL DB appServiceTier : Basic,Standard,Premium"
      }
    },
    "nonAdminDatabaseUsername": {
      "type": "string",
      "metadata": {
        "description": "Non-admin Database User. Must be Unique"
      }
    },
    "nonAdminDatabasePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Non-admin Database User password"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage Account Type : Standard-LRS, Standard-GRS,Standard-RAGRS,Standard-ZRS"
      }
    },
    "redisCacheName": {
      "type": "string",
      "metadata": {
        "description": "Redis Cache Name"
      }
    },
    "redisCacheServiceTier": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "Redis Cache appServiceTier - Basic , Standard"
      }
    },
    "emails": {
      "type": "array",
      "metadata": {
        "description": "A list of strings representing the email addresses to send alerts to."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "packageUri": {
      "type": "string"
    }
  }
    "variables": {
        "primarySubnetId": "[resourceId(parameters('existingPrimaryVirtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingPrimaryVirtualNetworkName'), parameters('existingPrimaryCacheSubnetName'))]",
        "secondarySubnetId": "[resourceId(parameters('existingSecondaryVirtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingSecondaryVirtualNetworkName'), parameters('existingSecondaryCacheSubnetName'))]"
    },
    "resources": [
    {
      "apiVersion": "2014-04-01-preview",
      "name": "[parameters('redisCacheName')]",
      "type": "Microsoft.Cache/Redis",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('redisCacheServiceTier')]",
          "family": "C",
          "capacity": 0
        },
        "redisVersion": "2.8",
        "enableNonSslPort": false
      }
    },
    {
        "type": "Microsoft.Cache/Redis/linkedServers",
        "apiVersion": "2020-06-01",
        "name": "[concat(parameters('newPrimaryCacheName'), '/', parameters('newSecondaryCacheName'))]",
        "dependsOn": [
            "[resourceId('Microsoft.Cache/redis', parameters('newPrimaryCacheName'))]",
            "[resourceId('Microsoft.Cache/redis', parameters('newSecondaryCacheName'))]"
        ],
        "comments": "Create a geo-replication link. This resource is created as a nested resource of the primary cache. Its name is fixed and cannot be changed. Its properties identifies the secondary cache and labels it as the secondary.",
        "properties": {
            "linkedRedisCacheId": "[resourceId('Microsoft.Cache/Redis', parameters('newSecondaryCacheName'))]",
            "linkedRedisCacheLocation": "[parameters('secondaryLocation')]",
            "serverRole": "Secondry"
            }
    }
    ],
    "outputs": {
        "primaryLocation": {
            "type": "string",
            "value": "[parameters('location')]"
        },
        "existingPrimaryCacheSubnetId": {
            "type": "string",
            "value": "[variables('primarySubnetId')]"
        },
        "newPrimaryCacheId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Cache/Redis', parameters('newPrimaryCacheName'))]"
        },
        "secondaryLocation": {
            "type": "string",
            "value": "[parameters('secondaryLocation')]"
        },
        "existingSecondaryCacheSubnetId": {
            "type": "string",
            "value": "[variables('secondarySubnetId')]"
        },
        "newSecondaryCacheId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Cache/Redis', parameters('newSecondaryCacheName'))]"
        }
    }
}